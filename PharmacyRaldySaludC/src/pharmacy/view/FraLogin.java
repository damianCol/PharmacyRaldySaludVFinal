package pharmacy.view;

import pharmacy.persistence.DB;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 * FraLogin class
 * @author CR
 */
public class FraLogin extends javax.swing.JFrame {
    private DB dataFile;            /** Database file */

    /**
     * Creates new form FraLogin
     */
    public FraLogin() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        this.dataFile = new DB();
        this.dataFile.connectMSAccess("C:\\Users\\danny\\Downloads\\PharmacyRaldySaludV1.0.1.3\\PharmacyRaldySalud\\src\\pharmacy\\persistence\\PharmacyRS.accdb");
        this.selectUser();
    }

    /**
     * Get Data file
     * @return Data file
     */
    public DB getDataFile() {
        return this.dataFile;
    }

    /**
     * Set Data file
     * @param dataFile Data file
     */
    public void setDataFile(DB dataFile) {
        this.dataFile = dataFile;
    }

    /**
     * Select employees from DB
     */
    private void selectUser() {
        String query = "SELECT * FROM User";
        if (this.getDataFile().execute(query)) {
            try {
                this.getDataFile().getResultSet().next();
            } catch (SQLException ex) {
                Logger.getLogger(FraUser.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labUsername = new javax.swing.JLabel();
        labPassword = new javax.swing.JLabel();
        butLogin = new javax.swing.JButton();
        txtUsername = new javax.swing.JTextField();
        pasPassword = new javax.swing.JPasswordField();
        butForgot = new javax.swing.JButton();
        labVersion = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pharmacy RS App Login");
        setName("fraLogin"); // NOI18N
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labUsername.setText("Username");
        getContentPane().add(labUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 37, -1, -1));

        labPassword.setText("Password");
        getContentPane().add(labPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 75, -1, -1));

        butLogin.setText("Login");
        butLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butLoginActionPerformed(evt);
            }
        });
        getContentPane().add(butLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(81, 110, -1, -1));
        getContentPane().add(txtUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 34, 200, -1));
        getContentPane().add(pasPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 72, 200, -1));

        butForgot.setText("Forgot your password?");
        butForgot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butForgotActionPerformed(evt);
            }
        });
        getContentPane().add(butForgot, new org.netbeans.lib.awtextra.AbsoluteConstraints(192, 110, -1, -1));

        labVersion.setText("Version 1.0.11");
        getContentPane().add(labVersion, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 154, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pharmacy/view/fondo-de-pantalla-blanco-2 (1).jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 380, 180));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Login button
     * @param evt Event
     */
    private void butLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butLoginActionPerformed
        if (this.isPassword(txtUsername.getText(), new String(pasPassword.getPassword()))) {
            try {
                PharmacyMDI mdiForm = new PharmacyMDI(this.getDataFile(), 
                        this.getDataFile().getResultSet().getInt("userLevel"));
                this.updateFirstLastLogin();
                mdiForm.setVisible(true);
                this.setVisible(false);
            } catch (SQLException ex) {
                Logger.getLogger(FraLogin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else {
            JOptionPane.showMessageDialog(this, 
                    "Sorry, Username and password do not match!", "Login",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_butLoginActionPerformed

    /**
     * Forgot your password?
     * @param evt Event
     */
    private void butForgotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butForgotActionPerformed
        FraForgot forgotForm = new FraForgot(this.getDataFile());
        forgotForm.setVisible(true);
    }//GEN-LAST:event_butForgotActionPerformed

    /**
     * Compare username/password entered by user with username/password from DB
     * @param username Username
     * @param password Password
     * @return True is correct
     */
    private boolean isPassword(String username, String password) {
        boolean correct = false;
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            md.update(password.getBytes(), 0, password.length());
            password = new BigInteger(1, md.digest()).toString(16);

            if (this.getDataFile().getResultSet() != null) {
                this.getDataFile().getResultSet().beforeFirst();
                while (this.getDataFile().getResultSet().next()) {
                    if (this.getDataFile().getResultSet().getString("username")
                            .equals(username)) {
                        if (this.getDataFile().getResultSet()
                                .getString("password").equals(password)) {
                            correct = true;
                        }
                        break;
                    }
                }
            }
        } catch (NoSuchAlgorithmException | SQLException ex) {
            Logger.getLogger(FraLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
        return correct;
    }

    /**
     * Update first and last login fields
     */
    private void updateFirstLastLogin() {
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
        Date now = new Date();

        try {
            String username = this.getDataFile().getResultSet().getString("username");
            Date firstLogin = this.getDataFile().getResultSet().getDate("firstLogin");
            String query;

            if (firstLogin == null) {
                query = "UPDATE User SET " 
                        + "firstLogin = #" + dateFormat.format(now) + "#, "
                        + "lastLogin = #" + dateFormat.format(now) + "# "
                        + "WHERE username = '" + username + "'";
            }
            else {
                query = "UPDATE User SET " 
                        + "lastLogin = #" + dateFormat.format(now) + "# "
                        + "WHERE username = '" + username + "'";
            }

            if (this.getDataFile().execute(query)) {
            }
        } catch (SQLException ex) {
            Logger.getLogger(FraLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FraLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new FraLogin().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butForgot;
    private javax.swing.JButton butLogin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel labPassword;
    private javax.swing.JLabel labUsername;
    private javax.swing.JLabel labVersion;
    private javax.swing.JPasswordField pasPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

}
